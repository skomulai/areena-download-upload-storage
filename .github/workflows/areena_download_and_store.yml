name: Download Areena program and upload it to a cloud storage

# Run only manually
on:
  workflow_dispatch:
    inputs:
      areena_url:
        description: 'URL for YLE Areena program'
        required: true
        type: string

env:
  # Target for git checkout command, default = master
  CHECKOUT_REF: master
  # Reads your .rclone.conf from repo secrets into an environment variable
  RCLONE_CONF: ${{ secrets.RCLONE_CONF }} 
  # Remote target reference in rclone configuration
  RCLONE_REMOTE_REF: remote
  # Path in cloud storage
  RCLONE_REMOTE_CLOUD_PATH: media_dls
  # Additional parameters for rclone
  RCLONE_OPTS: -P --create-empty-src-dirs

jobs:
  download-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Install yle-dl and dependencies
        run: |
          git clone https://github.com/aajanki/yle-dl.git
          cd yle-dl
          git checkout $CHECKOUT_REF
          pip3 install --user --upgrade yle-dl
          sudo apt update  
          sudo apt install ffmpeg
        
      - name: Download Yle Areena program
        run: |
          echo yle-dl ${{ github.event.inputs.areena_url }} -c ${{ github.workspace }}/.yledl.conf
          yle-dl ${{ github.event.inputs.areena_url }} -c ${{ github.workspace }}/.yledl.conf
          ls -alF downloaded/

      # Feel free to remove this step and extract_subtitles.sh file from repo if you don't need individual srt files
      - name: Extract subtitles as srt files
        run: |
          sudo apt install mkvtoolnix
          chmod +x ${{ github.workspace }}/extract_subtitles.sh
          ${{ github.workspace }}/extract_subtitles.sh downloaded/*.mkv
          ls -alF downloaded/

      - name: Install and configure rclone
        run: |
          sudo apt install rclone
          echo "$RCLONE_CONF" > ~/.rclone.conf
          chmod 600 ~/.rclone.conf      
          
      - name: Upload to cloud storage
        run: |
          echo rclone copy downloaded $RCLONE_REMOTE_REF:$RCLONE_REMOTE_CLOUD_PATH $RCLONE_OPTS
          rclone copy downloaded $RCLONE_REMOTE_REF:$RCLONE_REMOTE_CLOUD_PATH $RCLONE_OPTS
          
